{"version":3,"sources":["components/home/Home.jsx"],"names":["echo","Echo","broadcaster","key","cluster","forceTLS","Home","props","onClickLogin","state","cuid","configAuth","client_id","config","auth","AUTH_CLIENT_ID","redirect_uri","REDIRECT_URI","response_type","localStorage","setItem","query","queryString","stringify","sort","encode","AuthRedirect","BASE_URL","window","location","href","loadQrCode","setState","loading","getQrCode","then","res","console","log","qrImg","qr_code","channel","channel_id","listen","e","uniqueCode","token","accessToken","saveTokens","setTimeout","process","catch","err","this","stopListening","leaveChannel","style","background","padding","minHeight","type","justify","span","className","onClick","src","alt","tip","spinning","Component","connect","user","dispatch","ownProps","ev","loadToken","onRefreshToken"],"mappings":"+TA2BMA,EAAO,I,OAAIC,GAND,CACdC,YAAa,SACbC,IAAK,uBACLC,QAAS,MACTC,UAAU,IAQNC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAORC,aAAe,WACb,IAAMC,EAAQC,MACRC,EAAa,CACjBC,UAAWC,IAAOC,KAAKC,eACvBC,aAAcH,IAAOC,KAAKG,aAC1BC,cAAe,OACfT,MAAOA,GAETU,aAAaC,QAAQ,aAAcX,GACnC,IAAIY,EAAQC,IAAYC,UAAUZ,EAAY,CAAEa,MAAM,EAAOC,QAAQ,IACjEC,EAAY,UAAMb,IAAOc,SAAb,4BAAyCN,GACzDO,OAAOC,SAASC,KAAOJ,GAnBN,EAsBnBK,WAAa,WACX,EAAKC,SAAS,CAAEC,SAAS,IACzB,EAAK1B,MACF2B,YACAC,MAAK,SAAAC,GACJC,QAAQC,IAAI,KAAMF,GAClB,EAAKJ,SAAS,CACZO,MAAOH,EAAII,UAEb,EAAKR,SAAS,CAAEC,SAAS,IAKVjC,EAAKyC,QAAL,qBAA2BL,EAAIM,aACrCC,OAAO,oBAAoB,SAAAC,GAElCP,QAAQC,IAAIM,EAAEC,WAAWC,MAAMC,aAC/BC,YAAWJ,EAAEC,WAAWC,OACxBG,YAAW,WACTrB,OAAOC,SAASC,KAAOoB,kBACtB,WAGNC,OAAM,SAAAC,GACL,EAAKpB,SAAS,CAAEC,SAAS,QA7C7B,EAAKxB,MAAQ,CAAE8B,MAAO,GAAIN,SAAS,GAFlB,E,iFAKjBoB,KAAKtB,e,wCA+CL/B,EAAKyC,QAAQ,gBAAgBa,cAAc,oBAC3CtD,EAAKuD,aAAa,kB,+BAIlB,OACE,yBAAKC,MAAO,CAAEC,WAAY,OAAQC,QAAS,GAAIC,UAAW,MACxD,uBAAKC,KAAK,OAAOC,QAAQ,gBACvB,uBAAKC,KAAM,IACT,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,gBAAd,eACA,yBAAKA,UAAU,gBAAgBC,QAASX,KAAK7C,cAC3C,yBAAKyD,IAAK,uBAAwBC,IAAI,aACtC,+DAEF,yBAAKH,UAAU,gBACb,0BAAMA,UAAU,WAAhB,OAEF,uBAAQH,KAAK,UAAUI,QAASX,KAAKtB,YAArC,YAMA,6BACA,6BACA,uBAAMoC,IAAI,aAAaC,SAAUf,KAAK5C,MAAMwB,SACzCoB,KAAK5C,MAAM8B,OACV,yBAAKwB,UAAU,WACb,yBAAKG,IAAI,UAAUD,IAAG,iCAA4BZ,KAAK5C,MAAM8B,oB,GAnFhE8B,aA+GJC,6BAXS,SAAA7D,GAAK,MAAK,CAChC8D,KAAM9D,EAAM8D,SAGa,SAACC,EAAUC,GACpC,MAAO,CACLvC,UAAW,SAAAwC,GAAE,OAAIF,EAAStC,gBAC1ByC,UAAW,SAAA7B,GAAK,OAAI0B,EAASI,YAAe9B,QAIjCwB,CAGbhE","file":"static/js/7.0358168e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport cuid from \"cuid\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Row, Col, Button, Spin } from \"antd\";\r\nimport queryString from \"query-string\";\r\nimport config from \"./../../config\";\r\nimport { getQrCode, onRefreshToken, saveTokens } from \"../../actions/userAction\";\r\nimport Echo from \"laravel-echo\";\r\n\r\n// window.Echo = new Echo({\r\n//   broadcaster: \"pusher\",\r\n//   key: \"ef9bcd4ecd1038dd7de2\",\r\n//   cluster: \"ap2\",\r\n//   forceTLS: true\r\n// });\r\n// var channel = Echo.channel('uniqueCode.5d9b34975838a');\r\n// channel.listen(\"UniqueCodeDecode\", e => {\r\n//   alert(\"sa\");\r\n//   console.log(e);\r\n// });\r\nconst options = {\r\n  broadcaster: \"pusher\",\r\n  key: \"ef9bcd4ecd1038dd7de2\",\r\n  cluster: \"ap2\",\r\n  forceTLS: true\r\n};\r\nconst echo = new Echo(options);\r\n// var channel = echo.channel('my-channel');\r\n// channel.listen('.my-event', function(data) {\r\n//   alert(JSON.stringify(data));\r\n// });\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { qrImg: \"\", loading: false };\r\n  }\r\n  componentDidMount() {\r\n    this.loadQrCode();\r\n  }\r\n\r\n  onClickLogin = () => {\r\n    const state = cuid();\r\n    const configAuth = {\r\n      client_id: config.auth.AUTH_CLIENT_ID,\r\n      redirect_uri: config.auth.REDIRECT_URI,\r\n      response_type: \"code\",\r\n      state: state\r\n    };\r\n    localStorage.setItem(\"state_cuid\", state);\r\n    let query = queryString.stringify(configAuth, { sort: false, encode: false });\r\n    let AuthRedirect = `${config.BASE_URL}/oauth/authorize?${query}`;\r\n    window.location.href = AuthRedirect;\r\n  };\r\n\r\n  loadQrCode = () => {\r\n    this.setState({ loading: true });\r\n    this.props\r\n      .getQrCode()\r\n      .then(res => {\r\n        console.log(\"in\", res);\r\n        this.setState({\r\n          qrImg: res.qr_code\r\n        });\r\n        this.setState({ loading: false });\r\n        // Echo.private(`unique-code.5d9b34975838a`).listen(\"UniqueCodeDecode\", e => {\r\n        //   alert(\"sa\");\r\n        //   console.log(e);\r\n        // });\r\n        var channel2 = echo.channel(`uniqueCode.${res.channel_id}`);\r\n        channel2.listen(\"UniqueCodeDecode\", e => {\r\n          // alert(\"sa\");\r\n          console.log(e.uniqueCode.token.accessToken);\r\n          saveTokens(e.uniqueCode.token);\r\n          setTimeout(() => {\r\n            window.location.href = process.env.PUBLIC_URL;\r\n          }, 1000);\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  leaveAllChannel() {\r\n    echo.channel(\"uniqueCode.*\").stopListening(\"UniqueCodeDecode\");\r\n    echo.leaveChannel(\"uniqueCode.*\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ background: \"#fff\", padding: 24, minHeight: 380 }}>\r\n        <Row type=\"flex\" justify=\"space-around\">\r\n          <Col span={12}>\r\n            <div className=\"signup-container\">\r\n              <div className=\"signup-content\">\r\n                <h1 className=\"signup-title\">Auth Option</h1>\r\n                <div className=\"social-signup\" onClick={this.onClickLogin}>\r\n                  <img src={\"assets/lara_auth.png\"} alt=\"Facebook\" />\r\n                  <span>Login With Laravel Passport </span>\r\n                </div>\r\n                <div className=\"or-separator\">\r\n                  <span className=\"or-text\">OR</span>\r\n                </div>\r\n                <Button type=\"primary\" onClick={this.loadQrCode}>\r\n                  Get Code\r\n                </Button>\r\n                {/* <Button type=\"primary\" onClick={this.leaveAllChannel}>\r\n                  leave All channel\r\n                </Button> */}\r\n                <br></br>\r\n                <br></br>\r\n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\r\n                  {this.state.qrImg && (\r\n                    <div className=\"qr-code\">\r\n                      <img alt=\"qr-code\" src={`data:image/jpeg;base64,${this.state.qrImg}`} />\r\n                    </div>\r\n                  )}\r\n                </Spin>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  user: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getQrCode: ev => dispatch(getQrCode()),\r\n    loadToken: token => dispatch(onRefreshToken(token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n"],"sourceRoot":""}