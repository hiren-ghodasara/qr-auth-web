{"version":3,"sources":["utils/helper.js","components/PrivateRoute/Profile.jsx"],"names":["colors","getAvatarColor","name","substr","hash","i","length","charCodeAt","index","Math","abs","tabBarStyle","textAlign","TabPane","data","Profile","this","props","getUserList","className","user","style","backgroundColor","toUpperCase","email","dateString","date","Date","monthIndex","getMonth","year","getFullYear","formatDate","created_at","defaultActiveKey","animated","size","tab","key","type","onClick","margin","header","footer","bordered","dataSource","userList","renderItem","item","Item","Component","connect","state","userInfo","dispatch","ownProps","event"],"mappings":"2QAAMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGK,SAASC,EAAeC,GAC7BA,EAAOA,EAAKC,OAAO,EAAG,GAGtB,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,IAC/BD,EAAO,GAAKA,EAAOF,EAAKK,WAAWF,GAErC,IAAIG,EAAQC,KAAKC,IAAIN,EAAOJ,EAAOM,QACnC,OAAON,EAAOQ,G,YC5BVG,EAAc,CAClBC,UAAW,UAEPC,EAAU,IAAKA,QACfC,EAAO,CACX,6CACA,qCACA,8CACA,yCACA,uCAEIC,E,4LAEFC,KAAKC,MAAMC,gB,+BAEH,IAAD,OACP,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,eACZH,KAAKC,MAAMG,KAAKlB,MACf,uBAAQiB,UAAU,qBAAqBE,MAAO,CAAEC,gBAAiBrB,EAAee,KAAKC,MAAMG,KAAKlB,QAC7Fc,KAAKC,MAAMG,KAAKlB,KAAK,GAAGqB,gBAI/B,yBAAKJ,UAAU,gBACb,yBAAKA,UAAU,aAAaH,KAAKC,MAAMG,KAAKlB,MAC5C,yBAAKiB,UAAU,YAAf,IAA4BH,KAAKC,MAAMG,KAAKI,OAC5C,yBAAKL,UAAU,eAAf,UDEL,SAAoBM,GACzB,IAAMC,EAAO,IAAIC,KAAKF,GAEhBG,EAAaF,EAAKG,WAClBC,EAAOJ,EAAKK,cAClB,MAHmB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGhHH,GAAc,IAAME,ECPSE,CAAWhB,KAAKC,MAAMG,KAAKa,eAGpE,yBAAKd,UAAU,qBACb,uBAAMe,iBAAiB,IAAIC,UAAU,EAAOxB,YAAaA,EAAayB,KAAK,QAAQjB,UAAU,gBAC3F,kBAACN,EAAD,CAASwB,IAAG,SAAYC,IAAI,KAC1B,uBAAQC,KAAK,UAAUC,QAAS,kBAAM,EAAKvB,MAAMC,gBAAjD,aAGA,wBAAIG,MAAO,CAAEoB,OAAQ,WAArB,aACA,uBACEL,KAAK,QACLM,OAAQ,uCACRC,OAAQ,uCACRC,UAAQ,EACRC,WAAY7B,KAAKC,MAAM6B,SACvBC,WAAY,SAAAC,GAAI,OACd,sBAAMC,KAAN,KACGD,EAAK9C,KADR,MACiB8C,EAAKxB,WAK5B,kBAACX,EAAD,CAASwB,IAAG,SAAYC,IAAI,KAC1B,wBAAIjB,MAAO,CAAEoB,OAAQ,WAArB,gBACA,uBACEL,KAAK,QACLM,OAAQ,uCACRC,OAAQ,uCACRC,UAAQ,EACRC,WAAY/B,EACZiC,WAAY,SAAAC,GAAI,OAAI,sBAAMC,KAAN,KAAYD,c,GAjD1BE,aAsEPC,6BAXS,SAAAC,GAAK,MAAK,CAChChC,KAAMgC,EAAMhC,KAAKiC,SACjBP,SAAUM,EAAMhC,KAAK0B,UAAY,OAGR,SAACQ,EAAUC,GACpC,MAAO,CACLrC,YAAa,SAAAsC,GAAK,OAAIF,EAASpC,mBAIpBiC,CAGbpC","file":"static/js/6.85b60603.chunk.js","sourcesContent":["const colors = [\r\n  \"#F44336\",\r\n  \"#e91e63\",\r\n  \"#9c27b0\",\r\n  \"#673ab7\",\r\n  \"#ff9800\",\r\n  \"#ff5722\",\r\n  \"#795548\",\r\n  \"#607d8b\",\r\n  \"#3f51b5\",\r\n  \"#2196F3\",\r\n  \"#00bcd4\",\r\n  \"#009688\",\r\n  \"#2196F3\",\r\n  \"#32c787\",\r\n  \"#00BCD4\",\r\n  \"#ff5652\",\r\n  \"#ffc107\",\r\n  \"#ff85af\",\r\n  \"#FF9800\",\r\n  \"#39bbb0\",\r\n  \"#4CAF50\",\r\n  \"#ffeb3b\",\r\n  \"#ffc107\"\r\n];\r\n\r\nexport function getAvatarColor(name) {\r\n  name = name.substr(0, 6);\r\n\r\n  var hash = 0;\r\n  for (var i = 0; i < name.length; i++) {\r\n    hash = 31 * hash + name.charCodeAt(i);\r\n  }\r\n  var index = Math.abs(hash % colors.length);\r\n  return colors[index];\r\n}\r\n\r\nexport function formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  const monthIndex = date.getMonth();\r\n  const year = date.getFullYear();\r\n  return monthNames[monthIndex] + \" \" + year;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Avatar, Tabs, List, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAvatarColor, formatDate } from \"../../utils/helper\";\r\nimport { getUserList } from \"../../actions/userAction\";\r\n\r\nconst tabBarStyle = {\r\n  textAlign: \"center\"\r\n};\r\nconst TabPane = Tabs.TabPane;\r\nconst data = [\r\n  \"Racing car sprays burning fuel into crowd.\",\r\n  \"Japanese princess to wed commoner.\",\r\n  \"Australian walks 100km after outback crash.\",\r\n  \"Man charged over missing wedding girl.\",\r\n  \"Los Angeles battles huge wildfires.\"\r\n];\r\nclass Profile extends Component {\r\n  componentDidMount() {\r\n    this.props.getUserList();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"user-profile\">\r\n        <div className=\"user-details\">\r\n          <div className=\"user-avatar\">\r\n            {this.props.user.name && (\r\n              <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.props.user.name) }}>\r\n                {this.props.user.name[0].toUpperCase()}\r\n              </Avatar>\r\n            )}\r\n          </div>\r\n          <div className=\"user-summary\">\r\n            <div className=\"full-name\">{this.props.user.name}</div>\r\n            <div className=\"username\">@{this.props.user.email}</div>\r\n            <div className=\"user-joined\">Joined {formatDate(this.props.user.created_at)}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"user-poll-details\">\r\n          <Tabs defaultActiveKey=\"1\" animated={false} tabBarStyle={tabBarStyle} size=\"large\" className=\"profile-tabs\">\r\n            <TabPane tab={`Demo 1`} key=\"1\">\r\n              <Button type=\"primary\" onClick={() => this.props.getUserList()}>\r\n                Click me!\r\n              </Button>\r\n              <h3 style={{ margin: \"16px 0\" }}>User List</h3>\r\n              <List\r\n                size=\"small\"\r\n                header={<div>Header</div>}\r\n                footer={<div>Footer</div>}\r\n                bordered\r\n                dataSource={this.props.userList}\r\n                renderItem={item => (\r\n                  <List.Item>\r\n                    {item.name} - {item.email}\r\n                  </List.Item>\r\n                )}\r\n              />\r\n            </TabPane>\r\n            <TabPane tab={`Demo 2`} key=\"2\">\r\n              <h3 style={{ margin: \"16px 0\" }}>Product List</h3>\r\n              <List\r\n                size=\"small\"\r\n                header={<div>Header</div>}\r\n                footer={<div>Footer</div>}\r\n                bordered\r\n                dataSource={data}\r\n                renderItem={item => <List.Item>{item}</List.Item>}\r\n              />\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user.userInfo,\r\n  userList: state.user.userList || []\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getUserList: event => dispatch(getUserList())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Profile);\r\n"],"sourceRoot":""}